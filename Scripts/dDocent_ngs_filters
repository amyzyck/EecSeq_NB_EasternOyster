#!/usr/bin/env bash
export LC_ALL=en_US.UTF-8

echo "This script will automatically filter a FreeBayes generated VCF file using criteria related to site depth," 
echo "quality versus depth, allelic balance at heterzygous individuals, and paired read representation."
echo -e "The script assumes that loci and individuals with low call rates (or depth) have already been removed. \n"
echo -e "Contact Jon Puritz (jpuritz@gmail.com) for questions and see script comments for more details on particular filters \n"

#Checks for correct ususage

if [[ -z "$2" ]]; then
echo "Usage is bash dDocent_filters.sh VCF_file Output_prefix"
exit 1
fi

if [[ -z "$3" ]]; then
echo -e "Is this from a mixture of SE and PE libraries? Enter yes or no."
read PE
else
PE=$4
fi

PREFIX=${1%.recode.vcf}
PREFIX=${PREFIX%.vcf}

#Creates a file with the original site depth and qual for each locus
cut -f8 $1 | grep -P -oe "DP=[0-9]*" | sed -s 's/DP=//g' > $PREFIX.DEPTH &
mawk '!/#/ {print $1 "\t" $2 "\t" $6}' $1 > $PREFIX.loci.qual &

#Filteres out sites with that on average have heterzygotes with less than a 0.15 allele balance between reads from each allele and Quality / Depth < 0.1 

vcffilter -s -f "AB > 0.15 & AB < 0.85 | AB < 0.01 | AB > 0.99" $1 | vcffilter -s -f "QUAL / DP > 0.1" > $PREFIX.temp.vcf
FILTERED=$( mawk '!/#/ {print $1}' $PREFIX.temp.vcf | wc -l ) && OLD=$(mawk '!/#/ {print $1}' $1 | wc -l)
NUMFIL=$(($OLD - $FILTERED))
echo -e "Number of sites filtered based on allele balance at heterozygous loci, locus quality, and mapping quality / Depth\n" $NUMFIL "of" $OLD "\n"
echo -e "Number of sites filtered based on allele balance at heterozygous loci, locus quality, and mapping quality / Depth\n" $NUMFIL "of" $OLD "\n" > $2.filterstats


#Filters out loci that have reads from both paired and unpaired reads

if [ "$PE" != "yes" ]; then

FILTERED2=$(vcffilter -f "PAIRED > 0.05 & PAIREDR > 0.05 & PAIREDR / PAIRED < 1.75 & PAIREDR / PAIRED > 0.25 | PAIRED < 0.05 & PAIREDR < 0.05" -s $PREFIX.temp.vcf | mawk '!/#/ {print $1}' | wc -l)
NUMFIL2=$(($FILTERED - $FILTERED2))
echo -e "Number of additional sites filtered based on properly paired status\n" $NUMFIL2 "of" $FILTERED "\n"
echo -e "Number of additional sites filtered based on properly paired status\n" $NUMFIL2 "of" $FILTERED "\n" >> $2.filterstats

else
FILTERED2=$(vcffilter -f "PAIRED < 0.005 & PAIREDR > 0.005 | PAIRED > 0.005 & PAIREDR < 0.005" -t NP -F PASS -A $PREFIX.temp.vcf | mawk '!/NP/ && !/#/' | wc -l)
NUMFIL2=$(($FILTERED - $FILTERED2))
echo -e "Number of additional sites filtered based on properly paired status\n" $NUMFIL2 "of" $FILTERED "\n"
echo -e "Number of additional sites filtered based on properly paired status\n" $NUMFIL2 "of" $FILTERED "\n" >> $2.filterstats

fi

wait
wait
wait

#Calculates the average depth and three times the square root of mean depth
DEPTH=$(mawk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }' $PREFIX.DEPTH)
MD=$(python -c "import math; print( round(math.sqrt($DEPTH)))")
MD=$(python -c "import math; print( round( $MD * 4))")
DEPTH=$(python -c "import math; print( round($DEPTH + $MD))")

#Filters loci above the mean depth + 1 standard deviation that have quality scores that are less than 2*DEPTH
paste $PREFIX.loci.qual $PREFIX.DEPTH | mawk -v x=$DEPTH '$4 > x'| mawk -v x=$DEPTH '$3 < 2 * x' > $PREFIX.lowQDloci
SITES=$(vcftools --vcf $PREFIX.temp.vcf --exclude-positions $PREFIX.lowQDloci 2>&1 | grep Sites | cut -f4 -d " " )
LQDL=$(( $FILTERED - $SITES ))

echo -e "Number of sites filtered based on high depth and lower than 2*DEPTH quality score\n" $LQDL "of" $FILTERED "\n"  
echo -e "Number of sites filtered based on high depth and lower than 2*DEPTH quality score\n" $LQDL "of" $FILTERED "\n" >> $2.filterstats

#Recalculates site depth for sites that have not been previously filtered
if [ "$PE" != "yes" ]; then
	vcffilter -f "PAIRED > 0.05 & PAIREDR > 0.05 & PAIREDR / PAIRED < 1.75 & PAIREDR / PAIRED > 0.25 | PAIRED < 0.05 & PAIREDR < 0.05" -s $PREFIX.temp.vcf | vcftools --vcf - --remove-filtered NP --exclude-positions $PREFIX.lowQDloci --site-depth --out $PREFIX 2> /dev/null
else
	vcffilter -f "PAIRED < 0.005 & PAIREDR > 0.005 | PAIRED > 0.005 & PAIREDR < 0.005" -t NP -F PASS -A $PREFIX.temp.vcf | vcftools --vcf - --remove-filtered NP --exclude-positions $PREFIX.lowQDloci --site-depth --out $PREFIX 2> /dev/null
fi

cut -f3 $PREFIX.ldepth > $PREFIX.site.depth

DP=$(mawk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }' $PREFIX.site.depth)
SD=$(mawk '{delta = $1 - avg; avg += delta / NR; mean2 += delta * ($1 - avg); } END { print sqrt(mean2 / NR); }' $PREFIX.site.depth)

#Calculates actual number of individuals in VCF file
#This is important because loci will now be filtered by mean depth calculated with individuals present in VCF
IND=$(mawk '/#/' $1 | tail -1 | wc -w)
IND=$(($IND - 9))

mawk '!/D/' $PREFIX.site.depth | mawk -v x=$IND '{print $1/x}' > meandepthpersite

#Calculates a mean depth cutoff to use for filtering
DP=$(perl -e "print ($DP+ 1.645*$SD) / $IND")
PP=$(mawk '!/SUM/' $PREFIX.site.depth | sort -rn | perl -e '$d=.05;@l=<>;print $l[int($d*$#l)]' )
PP=$(perl -e "print int($PP / $IND)")
GP=$(perl -e "print int($PP * 1.25)")
export GP

gnuplot << \EOF >> $2.filterstats
set terminal dumb size 120, 30
set autoscale
high=system("echo $GP")
set xrange [10:high] 
unset label
set title "Histogram of mean depth per site"
set ylabel "Number of Occurrences"
set xlabel "Mean Depth"
#set yr [0:100000]
binwidth=1
bin(x,width)=width*floor(x/width) + binwidth/2.0
set xtics floor(high/20)
plot 'meandepthpersite' using (bin($1,binwidth)):(1.0) smooth freq with boxes
pause -1
EOF

gnuplot << \EOF 
set terminal dumb size 120, 30
set autoscale
high=system("echo $GP")
set xrange [10:high] 
unset label
set title "Histogram of mean depth per site"
set ylabel "Number of Occurrences"
set xlabel "Mean Depth"
#set yr [0:100000]
binwidth=1
bin(x,width)=width*floor(x/width) + binwidth/2.0
set xtics floor(high/20)
plot 'meandepthpersite' using (bin($1,binwidth)):(1.0) smooth freq with boxes
pause -1
EOF


if [[ -z "$4" ]]; then
echo "The 95% cutoff would be" $PP
echo "Would you like to use a different maximum mean depth cutoff than "$PP", yes or no"

read NEWCUTOFF
else
NEWCUTOFF=$4
fi

if [ "$NEWCUTOFF" != "yes" ]; then
echo -e "Maximum mean depth cutoff is" $PP
echo -e "Maximum mean depth cutoff is" $PP >> $2.filterstats

else
	if [[ -z "$5" ]]; then
		echo "Please enter new cutoff"
		read PP
	else
		PP=$5
	fi
echo -e "Maximum mean depth cutoff is" $PP >> $2.filterstats
fi

#Combines all filters to create a final filtered VCF file
if [ "$PE" != "yes" ]; then
	vcffilter -f "PAIRED > 0.05 & PAIREDR > 0.05 & PAIREDR / PAIRED < 1.75 & PAIREDR / PAIRED > 0.25 | PAIRED < 0.05 & PAIREDR < 0.05" -s $PREFIX.temp.vcf | vcftools --vcf - --remove-filtered NP --max-meanDP $PP --recode --exclude-positions $PREFIX.lowQDloci --recode-INFO-all --out $2.FIL 2> /dev/null
else
	vcffilter -f "PAIRED < 0.005 & PAIREDR > 0.005 | PAIRED > 0.005 & PAIREDR < 0.005" -t NP -F PASS -A $PREFIX.temp.vcf | vcftools --vcf - --remove-filtered NP --max-meanDP $PP --recode --exclude-positions $PREFIX.lowQDloci --recode-INFO-all --out $2.FIL 2> /dev/null
fi

rm $PREFIX.temp.vcf

FILTERED3=$(mawk '!/#/ {print $1}' $2.FIL.recode.vcf | wc -l) && OLD2=$(cat $PREFIX.site.depth | wc -l)
NUMFIL3=$(($OLD2 - $FILTERED3))

echo -e "Number of sites filtered based on maximum mean depth\n" $NUMFIL3 "of" $OLD2 "\n"
echo -e "Number of sites filtered based on maximum mean depth\n" $NUMFIL3 "of" $OLD2 "\n" >> $2.filterstats


NUMFIL4=$(($OLD - $FILTERED3))

echo -e "Total number of sites filtered\n" $NUMFIL4 "of" $OLD "\n"
echo -e "Total number of sites filtered\n" $NUMFIL4 "of" $OLD "\n" >> $2.filterstats

echo -e "Remaining sites\n" $FILTERED3 "\n"
echo -e "Remaining sites\n" $FILTERED3 "\n" >> $2.filterstats

echo -e "Filtered VCF file is called Output_prefix.FIL.recode.vcf\n"
echo "Filter stats stored in $2.filterstats"














